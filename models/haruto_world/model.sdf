<sdf version="1.5">
  <model name="haruto_robot">
    <static>false</static>

    <!-- construct chasis for the robot -->
    <link name='chassis'>
      <pose>0 0 .1 0 0 0</pose>
      <collision name='collision'>
        <geometry>
          <box>
            <size>.8 .3 .15</size>
          </box>
        </geometry>
      </collision>
      <visual name='visual'>
        <geometry>
          <box>
            <size>.8 .3 .15</size>
          </box>
        </geometry>
      </visual>
    </link>

    <!-- construct back left wheel for robot -->
    <link name="back_left_wheel">
      <pose>0.25 0.18 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- construct back right wheel for robot -->
    <link name="back_right_wheel">
      <pose>0.25 -0.18 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- construct front left wheel for robot -->
    <link name="front_left_wheel">
      <pose>-0.25 0.18 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- construct front right wheel for robot -->
    <link name="front_right_wheel">
      <pose>-0.25 -0.18 0.1 0 1.5707 1.5707</pose>
      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual">
        <geometry>
          <cylinder>
            <radius>.1</radius>
            <length>.05</length>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <!-- construct laser for robot -->
    <link name="hokuyo_link">
      <collision name="collision">
        <pose>0 0 0.20 0 0 0</pose>
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
      </collision>

      <visual name="visual">
        <pose>0 0 0.20 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>file://meshes/hokuyo.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Adding sensor scan field configuration -->
      <sensor type="gpu_ray" name="laser">
        <pose>0 0 0.22 0 0 0</pose>
        <visualize>false</visualize>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>1024</samples>
              <resolution>1</resolution>
              <min_angle>-3.141593</min_angle>
              <max_angle>3.141593</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>5</max>
            <resolution>0.1</resolution>
          </range>
        </ray>

        <!-- Adding laser plugin -->
        <plugin name="hokuyo_node" filename="libgazebo_ros_gpu_laser.so">
          <robotNamespace></robotNamespace>
          <topicName>/scan</topicName>
          <frameName>/laser_link</frameName>
        </plugin>
      </sensor>
    </link>

    <!-- construct imu for robot -->
    <link name="imu_link">
      <visual name="visual">
        <pose>0 0 0.15 0 0 0</pose>
        <geometry>
          <box>
            <size>0.001 0.001 0.001</size>
          </box>
        </geometry>
      </visual>

      <collision name="collision">
        <pose>0 0 0.15 0 0 0</pose>
        <geometry>
          <box>
            <size>0.001 0.001 0.001</size>
          </box>
        </geometry>
      </collision>

      <!-- Adding sensor configuration -->
      <sensor type="imu" name="imu">
        <pose>0 0 0.15 0 0 0</pose>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>

        <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
          <robotNamespace></robotNamespace>
          <topicName>imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>100</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
      </sensor>
    </link>

    <!-- joint for back left wheel of revolute type rotates about y axis -->
    <joint type="revolute" name="back_left_wheel_hinge">
      <pose>0 0 -0.03 0 0 0</pose>
      <child>back_left_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- joint for back right wheel of revolute type rotates about y axis -->
    <joint type="revolute" name="back_right_wheel_hinge">
      <pose>0 0 0.03 0 0 0</pose>
      <child>back_right_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- joint for front left wheel of revolute type rotates about y axis -->
    <joint type="revolute" name="front_left_wheel_hinge">
      <pose>0 0 -0.03 0 0 0</pose>
      <child>front_left_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- joint for front right wheel of revolute type rotates about y axis -->
    <joint type="revolute" name="front_right_wheel_hinge">
      <pose>0 0 0.03 0 0 0</pose>
      <child>front_right_wheel</child>
      <parent>chassis</parent>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <!-- fixed joint for hokoyo laser with chassis -->
    <joint name="hokuyo_joint" type="fixed">
      <pose>0 0 0.03 0 0 0</pose>
      <parent>chassis</parent>
      <child>hokuyo_link</child>
    </joint>

    <!-- fixed joint for imu with chassis -->
    <joint name="imu_joint" type="fixed">
      <pose>0 0 0.03 0 0 0</pose>
      <parent>chassis</parent>
      <child>imu_link</child>
    </joint>

    <!-- Adding skid steer drive plugin -->
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <leftFrontJoint>front_left_wheel_hinge</leftFrontJoint>
      <rightFrontJoint>front_right_wheel_hinge</rightFrontJoint>
      <leftRearJoint>back_left_wheel_hinge</leftRearJoint>
      <rightRearJoint>back_right_wheel_hinge</rightRearJoint>
      <wheelSeparation>0.325</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <robotBaseFrame>base_link</robotBaseFrame>
      <torque>2</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>true</broadcastTF>
    </plugin>

  </model>
</sdf>